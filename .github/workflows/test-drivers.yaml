name: CI - Test Drivers

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  #push:
    #branches: [ "main" ]
  #pull_request:
    #branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      NEO4J_URL:
        description: 'Neo4J URL'
        required: false
        default: ''
      NEO4J_USER:
        description: 'Neo4J User'
        required: false
        default: 'neo4j'
      NEO4J_PASSWORD:
        description: 'Neo4J Password'
        required: false
        default: ''
      PYTHON_VERSION:
        description: 'Python version to use'
        required: false
        default: '3.11'  # Default Python version
      NEO4J_PYTHON_DRIVER_VERSION:
        description: 'Neo4J Python Driver version to use'
        required: false
        default: '5.27.0'  # Default Python version
      NEO4J_JAVA_DRIVER_VERSION:
        description: 'Neo4J Java Driver version to use'
        required: false
        default: '5.27.0'  # Default Neo4j driver versio
      NEO4J_JAVASCRIPT_DRIVER_VERSION:
        description: "Neo$j Javascript Driver version to use"
        required: false
        default: '5.27.0'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-python:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Ceckout Repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            python-driver

      # Runs a single command using the runners shell
      - name: Test Python Drivers
        uses: actions/setup-python@v5
        with:
          python-version: ${{ github.event.inputs.PYTHON_VERSION }}  # Use the input for Python 

      - name: Run Tests
        env:
          NEO4J_URI: ${{ github.event.inputs.NEO4J_URL || secrets.NEO4J_URL }}
          NEO4J_USERNAME: ${{ github.event.inputs.NEO4J_USER || secrets.NEO4J_USER }}
          NEO4J_PASSWORD: ${{ github.event.inputs.NEO4J_PASSWORD || secrets.NEO4J_PASSWORD }}
        run: |
          cd python-driver
          ls -lah
          if [ -z "${{ github.event.inputs.NEO4J_PYTHON_DRIVER_VERSION}}" ]; then 
            pip install python-dotenv neo4j==${{ github.event.inputs.NEO4J_PYTHON_DRIVER_VERSION }}
          else
            pip install python-dotenv neo4j
          fi
          python $PWD/main.py
    
  build-java:
    runs-on: ubuntu-latest
    needs: build-python

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            java-driver

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'  # Specify your Java version

      - name: Build and Run
        env:
          NEO4J_URL: "${{ secrets.NEO4J_URL }}"
          NEO4J_USERNAME: ${{ secrets.NEO4J_USER }}
          NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}
        run: |
          cd java-driver
          mvn clean package -Dneo4j.driver.version=${{ github.event.inputs.NEO4J_JAVA_DRIVER_VERSION }}
          if [ -f target/java-driver-1.0-SNAPSHOT.jar ]; then
            java -jar target/java-driver-1.0-SNAPSHOT.jar
          else
            echo "JAR file not found!"
            exit 1
          fi

  build-node:
    name: Node ${{ matrix.node }} sample
    runs-on: ubuntu-latest
    needs: [build-python, build-java]
    strategy:
      matrix:
        node: [ 14, 16, 18 ]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            node-driver

      - name: Set up Node
        uses: actions/setup-java@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: |
          npm install neo4j-driver@${github.event.inputs.NEO4J_JAVASCRIPT_DRIVER_VERSION}

      - name: Build and Run
        env:
          NEO4J_URL: ${{ secrets.NEO4J_URL }}
          NEO4J_USERNAME: ${{ secrets.NEO4J_USER }}
          NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}
        run: |
          run: node index.js